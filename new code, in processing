 ##Нe пашет, засыпаю,продолжаем разработку 
import random

class DiceGame:
    def __init__(self):
        self.dice_sides = [1, 2, 3, 4, 5, 6]
        self.player_score = 0
        self.ai_score = 0
        self.player_moves = []
        self.ai_moves = []
        self.tanks = []

    def roll_dice(self, num_dice):
        roll_results = []
        for _ in range(num_dice):
            roll_results.append(random.choice(self.dice_sides))
        return roll_results

    def play_round(self, num_dice):
        roll_results = self.roll_dice(num_dice)
        print("Dice Roll:", roll_results)
        tanks = [i for i in roll_results if i == 4]
        self.tanks.extend(tanks)
        print("Tanks:", tanks)

        player_choice = self.get_player_choice(roll_results)
        self.player_moves.append(player_choice)
        ai_choice = self.ai_turn(roll_results)
        self.ai_moves.append(ai_choice)

        # Player's turn
        player_points = self.calculate_points(roll_results, player_choice)
        self.player_score += player_points
        print("Player's Choice:", player_choice)
        print("Player's Score:", self.player_score)

        # AI's turn
        ai_points = self.calculate_points(roll_results, ai_choice)
        self.ai_score += ai_points
        print("AI's Choice:", ai_choice)
        print("AI's Score:", self.ai_score)

        # Update dice for next round
        remaining_dice = [i for i in roll_results if i not in [player_choice, ai_choice]]
        return len(remaining_dice)

    def get_player_choice(self, roll_results):
        while True:
            choice = input("Choose a side (1, 2, 3, 5, or 6): ")
            if choice in ["1", "2", "3", "5", "6"]:
                return int(choice)
            else:
                print("Invalid choice. Please enter 1, 2, 3, 5, or 6.")

    def ai_turn(self, roll_results):
        # Simple AI logic
        # Prioritize death rays (5, 6)
        if 5 in roll_results or 6 in roll_results:
            return random.choice([5, 6])
        # Otherwise choose a random valid side
        return random.choice([1, 2, 3])

    def calculate_points(self, roll_results, choice):
        points = 0
        if choice in [1, 2, 3]:
            points += roll_results.count(choice)
            if all(x in roll_results for x in [1, 2, 3]):
                points += 3
        elif choice in [5, 6]:
            points += roll_results.count(5) + roll_results.count(6)
        return points

    def play_game(self):
        num_dice = 13
        while self.player_score < 25 and self.ai_score < 25:
            print("\nRound:", self.player_score, "vs", self.ai_score)
            num_dice = self.play_round(num_dice)

        print("\nGame Over!")
        if self.player_score >= 25:
            print("Player Wins!")
        else:
            print("AI Wins!")
        print("Player's Score:", self.player_score)
        print("AI's Score:", self.ai_score)
        print("Player's Moves:", self.player_moves)
        print("AI's Moves:", self.ai_moves)
        print("Tanks:", self.tanks)

if __name__ == "__main__":
    game = DiceGame()
    game.play_game()
