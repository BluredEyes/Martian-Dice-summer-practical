 ## Ураа он пашет,но засыпаю,продолжаем разработку завтра надо доделать с json и из выбора сторон убрать 0
import random
import json

class DiceGame:
    def __init__(self):
        self.dice_sides = [1, 2, 3, 4, 5, 6]
        self.num_dice = 13
        self.player_score = 0
        self.ai_score = 0
        self.player_moves = []
        self.ai_moves = []
        self.game_over = False

    def roll_dice(self):
        return [random.choice(self.dice_sides) for _ in range(self.num_dice)]

    def count_sides(self, dice_roll):
        side_counts = {}
        for side in self.dice_sides:
            side_counts[side] = dice_roll.count(side)
        return side_counts

    def player_turn(self, dice_roll, side_counts):
        print("Dice Roll:", dice_roll)
        print("Side Counts:", side_counts)
        while True:
            choice = input("Choose a side (1, 2, 3, 5, or 6): ")
            if choice in ["1", "2", "3", "5", "6"]:
                break
            else:
                print("Invalid choice. Please choose 1, 2, 3, 5, or 6.")

        self.player_moves.append(choice)
        self.num_dice -= side_counts[int(choice)]
        if choice in ["1", "2", "3"]:
            self.player_score += side_counts[int(choice)]
            if side_counts[1] and side_counts[2] and side_counts[3]:
                self.player_score += 3
        else:
            self.ai_score += side_counts[int(choice)]

    def ai_turn(self, dice_roll, side_counts):
        print("AI's Turn...")
        # Implement AI logic to choose a side based on strategy
        # (You can use a simple strategy like choosing the side with the most occurrences)
        ai_choice = str(max(side_counts, key=side_counts.get))
        self.ai_moves.append(ai_choice)
        self.num_dice -= side_counts[int(ai_choice)]
        if ai_choice in ["1", "2", "3"]:
            self.ai_score += side_counts[int(ai_choice)]
            if side_counts[1] and side_counts[2] and side_counts[3]:
                self.ai_score += 3
        else:
            self.ai_score += side_counts[int(ai_choice)]

    def check_game_over(self, side_counts):
        if self.num_dice == 0:
            self.game_over = True
            print("Game Over!")
            print("Player Score:", self.player_score)
            print("AI Score:", self.ai_score)
            if self.player_score > self.ai_score:
                print("Player Wins!")
            elif self.ai_score > self.player_score:
                print("AI Wins!")
            else:
                print("It's a tie!")

    def play_game(self):
        while not self.game_over:
            dice_roll = self.roll_dice()
            side_counts = self.count_sides(dice_roll)
            if side_counts[4] > side_counts[5] + side_counts[6]:
                print("AI Wins! Tank side beat Death Ray side.")
                self.game_over = True
            elif side_counts[4] <= side_counts[5] + side_counts[6]:
                self.player_turn(dice_roll, side_counts)
                self.ai_turn(dice_roll, side_counts)
                self.check_game_over(side_counts)
        self.save_results()

    def save_results(self):
        results = {
            "Player Score": self.player_score,
            "AI Score": self.ai_score,
            "Player Moves": self.player_moves,
            "AI Moves": self.ai_moves
        }
        with open("game_results.json", "w") as f:
            json.dump(results, f, indent=4)

if __name__ == "__main__":
    game = DiceGame()
    game.play_game()
